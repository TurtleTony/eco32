Structure
---------

A top-level module (memtest.v) creates instances of a memory
test circuit (ramtest/ramtest.v) and a memory controller
(ramctrl/ramctrl.v), which in turn builds an internal model of
the external SDRAM (ramctrl/sdr.v, ramctrl/sdr_parameters.vh).


Intended Use
------------

The memory controller offers a complete simulation of the memory
subsystem, including a simulation model of a 512 Mbit SDRAM chip
(provided by Micron Technology). The controller can also be
synthesized for use on a real FPGA (but the PLL for clock phase
shifting required in this case is not included here).


Front-End (interface to caches)
-------------------------------

data read/write:
2^27 * 32 bit = 512 MB
strobe/acknowledge/timeout handshake


Back-End (interface to SDRAMs)
------------------------------

This is the standard SDRAM interface for 512 Mbit devices,
organized as 32 M x 16 bit (in 4 banks, 8192 rows each).
4 banks * 8192 rows * 1024 columns * 16 bit = 512 Mbit = 64 MB
The data pins of two of these memory chips are concatenated
to provide a total memory of 32 M x 32 bit = 128 MB.


Clocks
------

The SDRAM controller (and the SDRAM itself) is clocked with
100 MHz, the rest of the circuit is clocked with 50 MHz. The
clocks are synchronized, so that every other positive clock
edge at 100 MHz coincides with a positive clock edge at 50 MHz.
Therefore we don't need complicated circuits (FIFO, etc.) to
safely cross the clock domain border; simply stretching both
acknowledge signals to two 100 MHz clock cycles will do.
